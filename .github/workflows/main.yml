# Originally created by Renan LE CARO, 2021-03-20
# This workflow lets you upload your meteor app to digital ocean
# If you have poor upload speeds at home, building and uploading your app remotely will be much faster.
# You also get the ability to rollback a change from a mobile by having this setup, sweet for idie devs that are
# not always near their workstation.

# The setup is made mostly hard by my idea of creating a dedicated "continuous integration" ssh key. I normally use one ssh
# key for everything, but i don't feel like putting the private key on the interwebz :
# - have "mup deploy" running correctly from your machine first (learn more http://meteor-up.com/getting-started.html) with your regular ssh key
# - create a new key pair for CI deploys, lets call it id_rsa_do, by running ssh-keygen (learn more https://is.gd/kJkcAP)
# - add the content of (~/.ssh/id_rsa_do) in your repository as the secret "SSH_KEY" (learn more about the ssh-key-action https://is.gd/Ux9OXY)
# - add the output of "ssh-keyscan -H [IP OF YOUR DO SERVER]" in your repository as the secret "KNOWN_HOSTS" (learn more https://is.gd/edNByI)
# - make sure your droplet accepts the new key pair, run cat ~/.ssh/id_rsa_do.pub | ssh root@[IP OF YOUR DO SERVER] "cat >> ~/.ssh/authorized_keys" ( learn more https://is.gd/Ufjpvq)
# - to make builds faster, list dev only dependencies as devDependencies in package.json ( learn more https://is.gd/0spDMp )
# - add this file to your app, in the same folder as here (.github/workflows/main.yml)
# - change the last command of this script so that it finds your mup.js file 

name: Deploy meteor app to digital ocean with meteor up
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # we setup ssh first as it is quick, so the action will fail fast during the installation on a new repository
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # just a dummy request to check the communication with the server is ok, we'll upload after building
      - name: Test ssh key to fail fast
        run: ssh root@188.166.160.106 -t "pwd"

      # get the source
      - uses: actions/checkout@v2

      # install only the production dependencies
      - name: get production dependencies only
        run: npm install --production

      # install mup without the -g flag, as it would not be allowed on github action
      - name: install mup locally
        run: npm install mup

      # install meteor to be able to build the app as a bundle
      - name: install meteor
        run: curl https://install.meteor.com/ | sh

      # upload the bundle. Here, the .production folder is app specific. You need to get to the folder with your
      # mup.js file.
      - name: Bundle the app and upload to Digital Ocean
        run: cd ./.production && npx mup deploy

